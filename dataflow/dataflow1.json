{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Yearfilter"
				},
				{
					"name": "ComedyRomance"
				},
				{
					"name": "RottenTomatoes67"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Film as string,",
				"          Genre as string,",
				"          {Lead Studio} as string,",
				"          {Audience score %} as string,",
				"          Profitability as string,",
				"          {Rotten Tomatoes %} as string,",
				"          {Worldwide Gross} as string,",
				"          Year as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 filter(toInteger(Year)>= 2007 &&",
				"toInteger(Year)<= 2009) ~> Yearfilter",
				"Yearfilter filter(in(array('Romance','Comedy'),Genre)) ~> ComedyRomance",
				"ComedyRomance filter(toFloat({Rotten Tomatoes %}) >= 75) ~> RottenTomatoes67",
				"RottenTomatoes67 select(mapColumn(",
				"          Film,",
				"          Genre,",
				"          {Lead Studio},",
				"          {Audience score %},",
				"          Profitability,",
				"          {Rotten Tomatoes %},",
				"          {Worldwide Gross},",
				"          Year",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}